name: Backend CI

on:
  push:
    branches:
      - main
    paths:
      - 'src/api/**'
      - '.github/workflows/backend-ci.yml'
      - 'Dockerfile'
  pull_request:
    branches:
      - main
    paths:
      - 'src/api/**'
      - '.github/workflows/backend-ci.yml'
      - 'Dockerfile'
  workflow_dispatch:

env:
  DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_USER_TOKEN }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}


jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Run linter
        run: |
          poetry run poe lint
        continue-on-error: false

      - name: Download Models
        run: |
          poetry run poe download_models 

      - name: Run tests
        run: |
          poetry run poe test

      - name: Install Railway CLI
        run: bash <(curl -fsSL cli.new)

      - name: Deploy to Railway
        run: railway up --service btc-hodl-api
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}